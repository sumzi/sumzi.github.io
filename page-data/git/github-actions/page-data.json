{"componentChunkName":"component---src-templates-blog-post-js","path":"/git/github-actions/","result":{"data":{"site":{"siteMetadata":{"title":"SUMZI Blog"}},"markdownRemark":{"id":"db95c3d3-d764-5ae4-a6da-13b01c915a1b","excerpt":"GitHub Actions란? GitHub Actions는 GitHub에서 제공하는 CI(Continuous Integration)와 CD(Continuous Deployment…","html":"<h2>GitHub Actions란?</h2>\n<ul>\n<li>GitHub Actions는 GitHub에서 제공하는 CI(Continuous Integration)와 CD(Continuous Deployment)를 위한 서비스</li>\n<li>자동으로 코드 저장소에서 어떤 이벤트가 발생했을 때 특정 작업이 일어나게 하거나 주기적으로 어떤 작업들을 반복해서 실행시킬 수 있다.</li>\n</ul>\n<h2>핵심 개념</h2>\n<h3>Workflows</h3>\n<ul>\n<li>GitHub Actions에서 가장 상위 개념인 워크플로우는 자동화 해높은 작업 과정</li>\n<li>코드 저장소 내에서 <code class=\"language-text\">.github/workflows</code> 폴더 아래에 위치한 YAML 파일로 설정하며, 하나의 코드 저장소에 여러개의 워크플로우 YAML 파일 생성 가능하다.</li>\n<li>크게 2가지를 정의해야함\n<ul>\n<li><code class=\"language-text\">on</code> : 해당 워크플로우가 언제 실행되는지 정의</li>\n<li><code class=\"language-text\">jobs</code> : 해당 워크플로우가 구체적으로 어떤 일을 해야하는지 명시해야함</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">on:\n  push:\n    branches:\n      - main\n\njobs:\n  # ...(생략)...</code></pre></div>\n<p>코드 저장소의 <code class=\"language-text\">main</code> 브랜치에 <code class=\"language-text\">push</code> 이벤트가 발생할 때마다 작업을 실행함</p>\n<h3>Jobs</h3>\n<ul>\n<li>작업이란 독립된 가상머신 또는 컨테이너에서 돌아가는 하나의 처리 단위를 의미</li>\n<li>작업의 세부 내용으로 필수로 들어가야하는 <code class=\"language-text\">runs-on</code> 속성을 통해 해당 리눅스나 윈도우즈와 같은 실행 환경을 지정해야함</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># ...(생략)...\n\njobs:\n  job1:  // 여러 작업을 수행 가능\n    runs-on: ubuntu-latest\n    steps:\n      # ...(생략)...</code></pre></div>\n<h3>Steps</h3>\n<ul>\n<li>각 작업이 하나 이상의 단계로 모델링</li>\n<li>커맨드나 스크립트를 실행할 때는 <code class=\"language-text\">run</code>속성을 사용하며, 액션을 사용할 때는 <code class=\"language-text\">uses</code>속성을 사용함</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># ...(생략)...\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - run: npm install\n      - run: npm test</code></pre></div>\n<ul>\n<li>워크플로우 파일 내에서 작업 단계를 명시해 줄 때는 각 단계 앞에 반드시 <code class=\"language-text\">-</code>를 붙여야함</li>\n</ul>\n<h3>Actions</h3>\n<ul>\n<li>액션은 GitHub Actions에서 빈번하게 필요한 반복 단계를 재사용하기 용이하도록 제공되는 일종의 작업 공유 메커니즘</li>\n<li>하나의 코드 저장소 범위 내에서 여러 워크플로우 간에서 공유, 공개 코드 저장소를 통해 액션을 공유하면 GitHub상의 모든 코드 저장소에서 사용가능</li>\n</ul>\n<h2>GiHub Actions로 gh-pages 자동 배포하기</h2>\n<blockquote>\n<p>정적 파일을 master branch에 push하면 자동으로 빌드되고 그 결과물을 gh-pages branch에 올려서 배포해보자</p>\n</blockquote>\n<ol>\n<li>\n<p><code class=\"language-text\">.github/workflows</code> 폴더에 <code class=\"language-text\">.yml</code> 파일을 추가, 위크플로우 생성</p>\n</li>\n<li>\n<p>해당 브랜치에 <code class=\"language-text\">push</code>할 때 실행되는 <code class=\"language-text\">jobs</code>을 작성</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> name: Deploy to GitHub Pages\n\n on:\n   push:\n     branches:\n       - master\n\n jobs:\n   deploy:\n     runs-on: ubuntu-latest\n\n     steps:\n       - uses: actions/checkout@v2\n       - uses: actions/setup-node@v3\n         with:\n           node-version: 18\n           cache: npm\n\n       - name: Install dependencies\n         run: npm install --frozen-lockfile\n\n       - name: Build website\n         run: npm run build\n\n       - name: Deploy to GitHub Pages\n         uses: peaceiris/actions-gh-pages@v3\n         with:\n           github_token: ${{ secrets.GITHUB_TOKEN }}\n           publish_dir: ./build\n</code></pre></div>\n</li>\n<li>\n<p>Personal access tokens 생성하기</p>\n<ul>\n<li>Settings > Developer settings > Personal access tokens</li>\n<li>New personal access token 생성</li>\n<li>Select scopes 에서 repo 체크</li>\n</ul>\n</li>\n<li>\n<p>token을 Secrets Actions에 추가하기</p>\n<ul>\n<li>해당 repository에서 Settings > Secrets > Action</li>\n<li>Repository secrets에 키와 값을 입력한다.</li>\n</ul>\n</li>\n</ol>\n<h2>참고</h2>\n<ul>\n<li><a href=\"https://www.daleseo.com/github-actions-basics/\">https://www.daleseo.com/github-actions-basics/</a></li>\n<li><a href=\"https://velog.io/@kdeun1/Github-Actions%EB%A1%9C-gh-pages-%EC%9E%90%EB%8F%99-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0\">https://velog.io/@kdeun1/Github-Actions%EB%A1%9C-gh-pages-%EC%9E%90%EB%8F%99-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0</a></li>\n</ul>","frontmatter":{"title":"Github Actions로 자동 배포하기","date":"October 11, 2022","description":null,"category":"git"}},"previous":null,"next":{"fields":{"slug":"/web/ci-cd/"},"frontmatter":{"title":"CI와 CD"}}},"pageContext":{"id":"db95c3d3-d764-5ae4-a6da-13b01c915a1b","previousPostId":null,"nextPostId":"0c041ab9-6528-50e7-b376-b1d25e15a8bc"}},"staticQueryHashes":["2841359383","3274528899"]}